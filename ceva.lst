     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 1C                          a db 28
    15 00000001 07                          b db 7
    16 00000002 05                          c db 5
    17 00000003 <res 00000001>              aux resb 1
    18                                  
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                      start:
    22                                          ; ...
    23 00000000 A0[00000000]                    mov al,[a]
    24 00000005 0205[01000000]                  add al,[b]
    25 0000000B A2[03000000]                    mov [aux],al
    26 00000010 A0[02000000]                    mov al,[c]
    27 00000015 040A                            add al,10
    28 00000017 2805[03000000]                  sub [aux],al
    29 0000001D A0[03000000]                    mov al,[aux]
    30                                          
    31                                          
    32                                      
    33                                          ; exit(0)
    34 00000022 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    35 00000024 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
