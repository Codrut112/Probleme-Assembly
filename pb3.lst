     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 0300                        a dw 3;
    15 00000002 0A00                        b dw 10;
    16 00000004 0100                        c dw 1;
    17 00000006 0200                        d dw 2;
    18 00000008 <res 00000002>              aux resw 1;
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                      start:
    22                                          ; ...
    23                                          ;(b-a)-(c+c+d)
    24 00000000 66A1[02000000]                  mov ax,[b]
    25 00000006 662B05[00000000]                sub ax,[a]
    26 0000000D 66A3[08000000]                  mov [aux],ax
    27 00000013 66A1[04000000]                  mov ax,[c]
    28 00000019 660305[04000000]                add ax,[c]
    29 00000020 660305[06000000]                add ax,[d]
    30 00000027 662905[08000000]                sub [aux],ax
    31 0000002E 66A1[08000000]                  mov ax,[aux]
    32                                          
    33                                          
    34                                      
    35                                          ; exit(0)
    36 00000034 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    37 00000036 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
