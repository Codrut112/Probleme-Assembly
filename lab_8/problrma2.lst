     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit,scanf,printf               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll
     9                                  import scanf msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    10                                  import printf mscvrt.dll                          ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    11                                  
    12                                  ; our data is declared here (the variables needed by our program)
    13                                  segment data use32 class=data
    14 00000000 <res 00000004>              n resd 1
    15 00000004 <res 00000004>              a resd 1
    16 00000008 256400                      format_citire db "%d",0
    17 0000000B 6E756D6172756C2064-         mesaj db "numarul de elemente:",0
    17 00000014 6520656C656D656E74-
    17 0000001D 653A00             
    18                                  
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                      start:
    22 00000000 68[0B000000]                    push dword mesaj
    23 00000005 FF15[00000000]                  call [printf]
    24 0000000B 83C404                          add esp,4
    25                                          
    26 0000000E 68[00000000]                    push dword n
    27 00000013 68[08000000]                    push dword format_citire
    28 00000018 FF15[00000000]                  call [scanf]
    29 0000001E 83C408                          add esp,4*2
    30                                          
    31                                          repeta:
    32 00000021 832D[00000000]01                sub dword[n],1
    33                                          
    34                                          
    35                                          
    36                                          
    37                                          ; exit(0)
    38 00000028 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    39 0000002A FF15[00000000]                  call    [exit]       ; call exit to terminate the program
